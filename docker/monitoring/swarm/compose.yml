services:
  prometheus:
    image: quay.io/prometheus/prometheus:v3.2.1
    command: --config.file=/etc/prometheus/prometheus.yml --log.level=debug
    #ports:
    #  - 9090:9090
    volumes:
      - /srv/containers/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /srv/containers/prometheus/data:/prometheus/data #Needs 777 mode

    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(\"${FQDN}\")" #Define in Portainer
        - "traefik.http.routers.prometheus.entrypoints=websecure"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.http.routers.prometheus.service=prometheus"
        - "traefik.http.routers.prometheus.tls.certresolver=cloudflare"
    networks:
        - monitoring
        - traefik_public
        
  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.9.1
    command:
      - '--path.rootfs=/host'
      - --collector.processes
    volumes:
      - '/:/host:ro,rslave'
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
    - monitoring
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    #ports:
    # - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
    - monitoring

  grafana:
    image: grafana/grafana:11.6.0
    volumes:
      - /srv/containers/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - /srv/containers/grafana/data:/var/lib/grafana
    #ports:
    # - "9100:3000"
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(\"${FQDN2}\")" #Define in POrtainer
        - "traefik.http.routers.grafana.entrypoints=websecure"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.routers.grafana.service=grafana"
        - "traefik.http.routers.grafana.tls.certresolver=cloudflare"
    networks:
        - monitoring
        - traefik_public
  
  influxdb:
    image: influxdb:2.7.11
    ports:
      - "8086:8086"
    volumes:
      - /srv/containers/influxdb/config:/etc/influxdb2
      - /srv/containers/influxdb/db:/var/lib/influxdb2
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.influxdb.rule=Host(\"${FQDN3}\")" #Define in POrtainer
        - "traefik.http.routers.influxdb.entrypoints=websecure"
        - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
        - "traefik.http.routers.influxdb.service=influxdb"
        - "traefik.http.routers.influxdb.tls.certresolver=cloudflare"
    networks:
        - monitoring
        - traefik_public
  prometheus-pve-exporter:
    image: prompve/prometheus-pve-exporter:3.5.2
    #volumes:
    #  - /srv/containers/pve-exporeter/pve.yml:/etc/prometheus/pve.yml
    environment:
      PVE_USER: "${PVE_USER}"
      PVE_PASSWORD: "${PVE_PASSWORD}"
      PVE_VERIFY_SSL: "false"
    #ports:
    #  - 9221:9221
    networks:
    - monitoring
    - traefik_public
  loki:
    image: grafana/loki:3.4.3 
    volumes:
      - /srv/containers/loki/loki-config.yml:/mnt/config/loki-config.yml
      - /srv/containers/loki/data:/tmp/loki # Needs chmod 777 to permit Loki to create with own uid
    #ports:
    #  - "3100:3100"
    command:
      - "-config.file=/mnt/config/loki-config.yml"
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.loki.rule=Host(\"${FQDN4}\")" #Define in POrtainer
        - "traefik.http.routers.loki.entrypoints=websecure"
        - "traefik.http.services.loki.loadbalancer.server.port=3100"
        - "traefik.http.routers.loki.service=loki"
        - "traefik.http.routers.loki.tls.certresolver=cloudflare"
    networks:
        - monitoring
        - traefik_public
  alloy:
    image: grafana/alloy:v1.10.2
    volumes:
      - /srv/containers/alloy/config.alloy:/etc/alloy/config.alloy
      - /srv/containers/alloy/data:/var/lib/alloy/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
        - 12345:12345

    command: "run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy"
    networks:
      - monitoring


networks:
  traefik_public:
    external: true
  monitoring:
    driver: overlay
    name: monitoring